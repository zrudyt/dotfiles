#
# tmux configuration file
#
# By Nicholas Marriott. Public domain.
# Customizations by Rudy Taraschi
#
# versions prior to 3.1 look for this file as ~/.tmux.conf
# v3.1 introduced ~/.config/tmux/tmux.conf
# v3.2 added XDG_CONFIG_HOME/tmux/tmux.conf

# default-shell path
# Specify the default shell. This is used as the login shell for new windows
# when the default-command option is set to empty, and must be the full path
# of the executable. When started tmux tries to set a default value from the
# first suitable of the SHELL environment variable, the shell returned by
# getpwuid(3), or /bin/sh. This option should be configured when tmux is used
# as a login shell, and if you want you can add default command each time,
# when we start a new window: Retach userspaces
# set -g default-command "reattach-to-user-namespace -l /bin/zsh"

# default-shell variable is only used to create a login shell when
# default-command is empty, use the default shell. Or you can simply change
# your default shell to zsh, in this case, tmux will start a login shell,
### set -g default-command /bin/zsh

# Some tweaks to the status line
set -g status-right "%H:%M"
set -g window-status-current-style "underscore"

# from https://arcolinux.com/everything-you-need-to-know-about-tmux-status-bar/
# set -g window-status-current-style fg=yellow
# set -g window-status-current-style bg=cyan
# set -g window-status-style fg=ywhite
# set -g window-status-style bg=red

set -g status-fg black
set -g status-bg cyan

# If running inside tmux ($TMUX is set), then change the status line to red
# %if #{TMUX}
# set -g status-bg red
# %endif

# Enable RGB colour if running in xterm(1)
set-option -sa terminal-overrides ",xterm*:Tc"

# Change the default $TERM to tmux-256color
set -g default-terminal "tmux-256color"

# No bells at all
set -g bell-action none

# Keep windows around after they exit
set -g remain-on-exit off

# Change the prefix key to C-a
set -g prefix C-a
unbind C-b
bind C-a send-prefix

# Bind kill-pane
unbind C-x
bind C-x kill-pane

# Turn the mouse on, but without copy mode dragging
set -g mouse on
unbind -n MouseDrag1Pane
unbind -Tcopy-mode MouseDrag1Pane

# Some extra key bindings to select higher numbered windows
bind F1 selectw -t:10
bind F2 selectw -t:11
bind F3 selectw -t:12
bind F4 selectw -t:13
bind F5 selectw -t:14
bind F6 selectw -t:15
bind F7 selectw -t:16
bind F8 selectw -t:17
bind F9 selectw -t:18
bind F10 selectw -t:19
bind F11 selectw -t:20
bind F12 selectw -t:21

# bind the prefix -> r key to reload the config file Wand display a message
unbind r
bind r source-file ~/.tmux.conf \; display "Reloaded ~/.tmux.conf"

# one of the features I love in tmux is being able to have thousands of lines
# from the terminal output, especially with suckless st that doesn't have
# scrollback
set -g history-limit 3000

# notice that the window numbers begin by 0. However, I find it more practical
# to set the first window to 1 instead.  To stay consistent, letâ€™s do the
# same with the panes
set -g base-index 1
set-window-option -g pane-base-index 1

# v and h are not binded by default, but we never know in the next versions...
unbind v
unbind h
unbind %     # Split vertically
unbind '"'   # Split horizontally

# The flag -c executes a shell command, and #{pane_current_path} simply bring
# you back to where you were in the filesystem.
bind v split-window -h -c "#{pane_current_path}"
bind h split-window -v -c "#{pane_current_path}"

# A key to toggle between smallest and largest sizes if a window is visible in
# multiple places
bind F set -w window-size

# Toggle monitoring activity in a window and the synchronize-panes option
bind m set monitor-activity
bind y set synchronize-panes\; display 'synchronize-panes #{?synchronize-panes,on,off}'

# Create a single default session - because a session is created here, tmux
# should be started with "tmux attach" rather than "tmux new"
### new -d -s0 -nirssi 'exec irssi'
### set -t0:0 monitor-activity on
### set -t0:0 aggressive-resize on
### neww -d -ntodo 'exec emacs ~/TODO'
### setw -t0:1 aggressive-resize on
### neww -d -nmutt 'exec mutt'
### setw -t0:2 aggressive-resize on
### neww -d
### neww -d
